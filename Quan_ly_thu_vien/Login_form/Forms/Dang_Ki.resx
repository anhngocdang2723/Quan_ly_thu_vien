<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThoat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnHienMatKhau.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAqJJREFUaEPt2FmrjVEcx/FdiDK7MXMnrqTkPZhCriReC8kscqPcGN4AN4Ykw41L
        SQrhgiJSZiFl+H61t579nP9azrP32buj1q8+Oe3W8AzrWYNWSUlJSUlJSUnJf5FJ7X+bpJc6A8kUbMYh
        rPCHhrGOdW1jsj8MO3OwG2/xFEvQa5biGWxrF2Zj4JmF/fiIX/iGleg3q2BbtvkBe2FfA8l2vIKddfgE
        xyq+4WrbL7ENYxaHzVVUO9EbTEcqm3ATn9tuYCNSmYF3qPdzBf0M3T/xI3Ts1hvXCaRyAFEdOWxSOYmo
        jg/NB9M4E3EMPxE1rNTTtcOofNUGRMnV9VqOYgJGlZm4jKixqsWI4nCKylddRxRnsKh81SU4DLOZj3uI
        GqhzDYnyCVH5Kme9KLYZla+7i3kI49N4jKhiJPWh93MjthmVjzzCiEnAN9HkJrQMUZydovJV1xBlOaLy
        Kd5M15u5hahgjjNaFCeBqHzVekTZiqh8jtf+N73cyCmk4hQb1dEepHIWUZ2crhuZi4eICqY4tzvDpeIU
        6+zkNyOHU+pNGLck0YKY8wBee1cW4gmiCim5xa1pDiLqI8Vv2msO40d/B1HFyFesRr9ZA9uK+ojcxog3
        UY+LTbS3SnmOReg1LqwvELUdce+V2+N1xW2AO9sfiBqr80J8qk3j9t2zSNRmnVuU4+jpVLkF7xE1XOfQ
        8KySmwA68cP2m+icQf7Fa0hN96OOK/5FRB1E3C2fhh27wE1r828fzBk0mZ0uoO9tfDUudH4PUWeD4CFu
        JwYSz+pH0GSGaeoLDmMoZ3fnb//3o+kCluOQ9EC2AEOPY9/X7/nlO6ILzLGO54sdmIpxEW9qHfbhPO7j
        NZyZ5N/+dg7uCNZi3Fx8SUlJSUlJSUlJKq3Wb0oKJQUC4OxtAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>