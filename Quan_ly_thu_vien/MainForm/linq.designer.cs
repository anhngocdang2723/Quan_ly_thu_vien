#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MainForm
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Quan_ly_thu_vien")]
	public partial class LinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertReturn(Return instance);
    partial void UpdateReturn(Return instance);
    partial void DeleteReturn(Return instance);
    partial void InsertReader(Reader instance);
    partial void UpdateReader(Reader instance);
    partial void DeleteReader(Reader instance);
    partial void InsertBorrow(Borrow instance);
    partial void UpdateBorrow(Borrow instance);
    partial void DeleteBorrow(Borrow instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    #endregion
		
		public LinqDataContext() : 
				base(global::MainForm.Properties.Settings.Default.Quan_ly_thu_vienConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Return> Returns
		{
			get
			{
				return this.GetTable<Return>();
			}
		}
		
		public System.Data.Linq.Table<Reader> Readers
		{
			get
			{
				return this.GetTable<Reader>();
			}
		}
		
		public System.Data.Linq.Table<Borrow> Borrows
		{
			get
			{
				return this.GetTable<Borrow>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Returns]")]
	public partial class Return : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _returnID;
		
		private int _borrowID;
		
		private System.DateTime _return_date;
		
		private int _quantity_returned;
		
		private double _late_fee;
		
		private EntityRef<Borrow> _Borrow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreturnIDChanging(int value);
    partial void OnreturnIDChanged();
    partial void OnborrowIDChanging(int value);
    partial void OnborrowIDChanged();
    partial void Onreturn_dateChanging(System.DateTime value);
    partial void Onreturn_dateChanged();
    partial void Onquantity_returnedChanging(int value);
    partial void Onquantity_returnedChanged();
    partial void Onlate_feeChanging(double value);
    partial void Onlate_feeChanged();
    #endregion
		
		public Return()
		{
			this._Borrow = default(EntityRef<Borrow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int returnID
		{
			get
			{
				return this._returnID;
			}
			set
			{
				if ((this._returnID != value))
				{
					this.OnreturnIDChanging(value);
					this.SendPropertyChanging();
					this._returnID = value;
					this.SendPropertyChanged("returnID");
					this.OnreturnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrowID", DbType="Int NOT NULL")]
		public int borrowID
		{
			get
			{
				return this._borrowID;
			}
			set
			{
				if ((this._borrowID != value))
				{
					if (this._Borrow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnborrowIDChanging(value);
					this.SendPropertyChanging();
					this._borrowID = value;
					this.SendPropertyChanged("borrowID");
					this.OnborrowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_date", DbType="Date NOT NULL")]
		public System.DateTime return_date
		{
			get
			{
				return this._return_date;
			}
			set
			{
				if ((this._return_date != value))
				{
					this.Onreturn_dateChanging(value);
					this.SendPropertyChanging();
					this._return_date = value;
					this.SendPropertyChanged("return_date");
					this.Onreturn_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity_returned", DbType="Int NOT NULL")]
		public int quantity_returned
		{
			get
			{
				return this._quantity_returned;
			}
			set
			{
				if ((this._quantity_returned != value))
				{
					this.Onquantity_returnedChanging(value);
					this.SendPropertyChanging();
					this._quantity_returned = value;
					this.SendPropertyChanged("quantity_returned");
					this.Onquantity_returnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_late_fee", DbType="Float NOT NULL")]
		public double late_fee
		{
			get
			{
				return this._late_fee;
			}
			set
			{
				if ((this._late_fee != value))
				{
					this.Onlate_feeChanging(value);
					this.SendPropertyChanging();
					this._late_fee = value;
					this.SendPropertyChanged("late_fee");
					this.Onlate_feeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Borrow_Return", Storage="_Borrow", ThisKey="borrowID", OtherKey="borrowID", IsForeignKey=true)]
		public Borrow Borrow
		{
			get
			{
				return this._Borrow.Entity;
			}
			set
			{
				Borrow previousValue = this._Borrow.Entity;
				if (((previousValue != value) 
							|| (this._Borrow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Borrow.Entity = null;
						previousValue.Returns.Remove(this);
					}
					this._Borrow.Entity = value;
					if ((value != null))
					{
						value.Returns.Add(this);
						this._borrowID = value.borrowID;
					}
					else
					{
						this._borrowID = default(int);
					}
					this.SendPropertyChanged("Borrow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Readers")]
	public partial class Reader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _readerID;
		
		private string _name;
		
		private string _address;
		
		private int _student_code;
		
		private int _phone_num;
		
		private EntitySet<Borrow> _Borrows;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreaderIDChanging(int value);
    partial void OnreaderIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onstudent_codeChanging(int value);
    partial void Onstudent_codeChanged();
    partial void Onphone_numChanging(int value);
    partial void Onphone_numChanged();
    #endregion
		
		public Reader()
		{
			this._Borrows = new EntitySet<Borrow>(new Action<Borrow>(this.attach_Borrows), new Action<Borrow>(this.detach_Borrows));
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_readerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int readerID
		{
			get
			{
				return this._readerID;
			}
			set
			{
				if ((this._readerID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreaderIDChanging(value);
					this.SendPropertyChanging();
					this._readerID = value;
					this.SendPropertyChanged("readerID");
					this.OnreaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_code", DbType="Int NOT NULL")]
		public int student_code
		{
			get
			{
				return this._student_code;
			}
			set
			{
				if ((this._student_code != value))
				{
					this.Onstudent_codeChanging(value);
					this.SendPropertyChanging();
					this._student_code = value;
					this.SendPropertyChanged("student_code");
					this.Onstudent_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_num", DbType="Int NOT NULL")]
		public int phone_num
		{
			get
			{
				return this._phone_num;
			}
			set
			{
				if ((this._phone_num != value))
				{
					this.Onphone_numChanging(value);
					this.SendPropertyChanging();
					this._phone_num = value;
					this.SendPropertyChanged("phone_num");
					this.Onphone_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reader_Borrow", Storage="_Borrows", ThisKey="readerID", OtherKey="readerID")]
		public EntitySet<Borrow> Borrows
		{
			get
			{
				return this._Borrows;
			}
			set
			{
				this._Borrows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Reader", Storage="_Account", ThisKey="readerID", OtherKey="readerID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Reader = null;
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Reader = this;
						this._readerID = value.readerID;
					}
					else
					{
						this._readerID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Borrows(Borrow entity)
		{
			this.SendPropertyChanging();
			entity.Reader = this;
		}
		
		private void detach_Borrows(Borrow entity)
		{
			this.SendPropertyChanging();
			entity.Reader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Borrows")]
	public partial class Borrow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _borrowID;
		
		private int _readerID;
		
		private int _bookID;
		
		private System.DateTime _borrow_date;
		
		private System.Nullable<System.DateTime> _due_date;
		
		private int _quantity_borrowed;
		
		private EntitySet<Return> _Returns;
		
		private EntityRef<Reader> _Reader;
		
		private EntityRef<Book> _Book;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnborrowIDChanging(int value);
    partial void OnborrowIDChanged();
    partial void OnreaderIDChanging(int value);
    partial void OnreaderIDChanged();
    partial void OnbookIDChanging(int value);
    partial void OnbookIDChanged();
    partial void Onborrow_dateChanging(System.DateTime value);
    partial void Onborrow_dateChanged();
    partial void Ondue_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondue_dateChanged();
    partial void Onquantity_borrowedChanging(int value);
    partial void Onquantity_borrowedChanged();
    #endregion
		
		public Borrow()
		{
			this._Returns = new EntitySet<Return>(new Action<Return>(this.attach_Returns), new Action<Return>(this.detach_Returns));
			this._Reader = default(EntityRef<Reader>);
			this._Book = default(EntityRef<Book>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrowID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int borrowID
		{
			get
			{
				return this._borrowID;
			}
			set
			{
				if ((this._borrowID != value))
				{
					this.OnborrowIDChanging(value);
					this.SendPropertyChanging();
					this._borrowID = value;
					this.SendPropertyChanged("borrowID");
					this.OnborrowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_readerID", DbType="Int NOT NULL")]
		public int readerID
		{
			get
			{
				return this._readerID;
			}
			set
			{
				if ((this._readerID != value))
				{
					if (this._Reader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreaderIDChanging(value);
					this.SendPropertyChanging();
					this._readerID = value;
					this.SendPropertyChanged("readerID");
					this.OnreaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookID", DbType="Int NOT NULL")]
		public int bookID
		{
			get
			{
				return this._bookID;
			}
			set
			{
				if ((this._bookID != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbookIDChanging(value);
					this.SendPropertyChanging();
					this._bookID = value;
					this.SendPropertyChanged("bookID");
					this.OnbookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_date", DbType="Date NOT NULL")]
		public System.DateTime borrow_date
		{
			get
			{
				return this._borrow_date;
			}
			set
			{
				if ((this._borrow_date != value))
				{
					this.Onborrow_dateChanging(value);
					this.SendPropertyChanging();
					this._borrow_date = value;
					this.SendPropertyChanged("borrow_date");
					this.Onborrow_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_due_date", DbType="Date")]
		public System.Nullable<System.DateTime> due_date
		{
			get
			{
				return this._due_date;
			}
			set
			{
				if ((this._due_date != value))
				{
					this.Ondue_dateChanging(value);
					this.SendPropertyChanging();
					this._due_date = value;
					this.SendPropertyChanged("due_date");
					this.Ondue_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity_borrowed", DbType="Int NOT NULL")]
		public int quantity_borrowed
		{
			get
			{
				return this._quantity_borrowed;
			}
			set
			{
				if ((this._quantity_borrowed != value))
				{
					this.Onquantity_borrowedChanging(value);
					this.SendPropertyChanging();
					this._quantity_borrowed = value;
					this.SendPropertyChanged("quantity_borrowed");
					this.Onquantity_borrowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Borrow_Return", Storage="_Returns", ThisKey="borrowID", OtherKey="borrowID")]
		public EntitySet<Return> Returns
		{
			get
			{
				return this._Returns;
			}
			set
			{
				this._Returns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reader_Borrow", Storage="_Reader", ThisKey="readerID", OtherKey="readerID", IsForeignKey=true)]
		public Reader Reader
		{
			get
			{
				return this._Reader.Entity;
			}
			set
			{
				Reader previousValue = this._Reader.Entity;
				if (((previousValue != value) 
							|| (this._Reader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reader.Entity = null;
						previousValue.Borrows.Remove(this);
					}
					this._Reader.Entity = value;
					if ((value != null))
					{
						value.Borrows.Add(this);
						this._readerID = value.readerID;
					}
					else
					{
						this._readerID = default(int);
					}
					this.SendPropertyChanged("Reader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Borrow", Storage="_Book", ThisKey="bookID", OtherKey="bookID", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.Borrows.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.Borrows.Add(this);
						this._bookID = value.bookID;
					}
					else
					{
						this._bookID = default(int);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Returns(Return entity)
		{
			this.SendPropertyChanging();
			entity.Borrow = this;
		}
		
		private void detach_Returns(Return entity)
		{
			this.SendPropertyChanging();
			entity.Borrow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Books")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bookID;
		
		private string _name;
		
		private string _title;
		
		private string _author;
		
		private int _year_published;
		
		private int _quantity;
		
		private EntitySet<Borrow> _Borrows;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbookIDChanging(int value);
    partial void OnbookIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void Onyear_publishedChanging(int value);
    partial void Onyear_publishedChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public Book()
		{
			this._Borrows = new EntitySet<Borrow>(new Action<Borrow>(this.attach_Borrows), new Action<Borrow>(this.detach_Borrows));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bookID
		{
			get
			{
				return this._bookID;
			}
			set
			{
				if ((this._bookID != value))
				{
					this.OnbookIDChanging(value);
					this.SendPropertyChanging();
					this._bookID = value;
					this.SendPropertyChanged("bookID");
					this.OnbookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_published", DbType="Int NOT NULL")]
		public int year_published
		{
			get
			{
				return this._year_published;
			}
			set
			{
				if ((this._year_published != value))
				{
					this.Onyear_publishedChanging(value);
					this.SendPropertyChanging();
					this._year_published = value;
					this.SendPropertyChanged("year_published");
					this.Onyear_publishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Borrow", Storage="_Borrows", ThisKey="bookID", OtherKey="bookID")]
		public EntitySet<Borrow> Borrows
		{
			get
			{
				return this._Borrows;
			}
			set
			{
				this._Borrows.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Borrows(Borrow entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_Borrows(Borrow entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _readerID;
		
		private string _username;
		
		private string _password;
		
		private string _role;
		
		private EntityRef<Reader> _Reader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreaderIDChanging(int value);
    partial void OnreaderIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    #endregion
		
		public Account()
		{
			this._Reader = default(EntityRef<Reader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_readerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int readerID
		{
			get
			{
				return this._readerID;
			}
			set
			{
				if ((this._readerID != value))
				{
					this.OnreaderIDChanging(value);
					this.SendPropertyChanging();
					this._readerID = value;
					this.SendPropertyChanged("readerID");
					this.OnreaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Reader", Storage="_Reader", ThisKey="readerID", OtherKey="readerID", IsUnique=true, IsForeignKey=false)]
		public Reader Reader
		{
			get
			{
				return this._Reader.Entity;
			}
			set
			{
				Reader previousValue = this._Reader.Entity;
				if (((previousValue != value) 
							|| (this._Reader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reader.Entity = null;
						previousValue.Account = null;
					}
					this._Reader.Entity = value;
					if ((value != null))
					{
						value.Account = this;
					}
					this.SendPropertyChanged("Reader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
